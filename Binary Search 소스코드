# 이분 탐색 (Binary Search), 정렬되어 있는 리스트에서 탐색 범위를 절반씩 좁혀가며 데이터를 탐색하는 방법

# 이분 탐색 소스코드 구현
def binary_search(array, target, start, end):
    # start 가 end 보다 높은경우에는 전체 원소에 찾으려는 값이 없다는 뜻
    if start  > end:
        return None
    # 중간 값은 시작과 끝을 2로 나눈값
    mid = (start+end) // 2
    # 중간값이 찾고자 하는 값과 같은 경우 인덱스 반환
    if array[mid] == target:
        return mid
    # 중간값이 찾고자 하는 값보다 큰경우 왼쪽에서 다시 이분탐색 함수를 가동
    elif array[mid] > target:
        return binary_search(array, target, start, mid-1)
    # 중간값이 찾고자 하는 값보다 작은 경우 오른쪽에서 다시 이분탐색 함수를 가동
    else:
        return binary_search(array, target, mid+1, end)

# 원소의 개수와 찾고자하는 값을 입력 
n, target = map(int, input().split())
# 전체 원소를 array 리스트에 입력
array = list(map(int, input().split()))
# 이진탐색 수행결과를 출력
result = binary_search(array, target, 0, n-1)
if result == None:
    print("원소는 존재하지 않습니다.")
else:
    print(result+1)
